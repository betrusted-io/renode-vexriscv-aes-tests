:name: AES Test Demo
:description: This script exercises the custom VexRiscv AES instructions


$name?="vexriscv-aes-test"
$bios?=@main.elf

mach clear
mach rem $name

using sysbus
mach create $name

machine LoadPlatformDescription @platforms/cpus/litex_vexriscv_linux.repl
machine StartGdbServer 3333 true

macro reset
"""
    sysbus LoadELF $bios
    cpu PC 0x0
"""
runMacro $reset

#define aes_enc_round(rs1, rs2, sel) opcode_R(CUSTOM0, 0x00, (sel << 3), rs1, rs2)
#define aes_enc_round_last(rs1, rs2, sel) opcode_R(CUSTOM0, 0x00, (sel << 3) | 2, rs1, rs2)

##define aes_dec_round(rs1, rs2, sel) opcode_R(CUSTOM0, 0x00, (sel << 3) | 1, rs1, rs2)
##define aes_dec_round_last(rs1, rs2, sel) opcode_R(CUSTOM0, 0x00, (sel << 3) | 2 | 1, rs1, rs2)
##define opcode_R(opcode, func3, func7, rs1, rs2)   \
##     ".word ((" #opcode ") | (regnum_%0 << 7) | (regnum_%1 << 15) | (regnum_%2 << 20) | ((" #func3 ") << 12) | ((" #func7 ") << 25));"   \
#                      funct7   rs2   rs1 fn3    rd  opcode
#                     3322222 22222 11111 111 11000 0000000
#                     1098765 43210 98765 432 10987 6543210
# aes_enc_round:      ssss000 bbbbb aaaaa 000 ddddd 0001011
# aes_enc_round_last: ssss010 bbbbb aaaaa 000 ddddd 0001011
# aes_dec_round:      ssss001 bbbbb aaaaa 000 ddddd 0001011
# aes_dec_round_last: ssss011 bbbbb aaaaa 000 ddddd 0001011

i @vexriscv-aes.py
# sysbus.cpu InstallCustomInstructionHandlerFromString "ssss000bbbbbaaaaa000ddddd0001011" "print('Local variables: '); print(dir()); print('CPU variables: '); print(dir(cpu)); print('Instruction variables: '); print(dir(instruction))"
sysbus.cpu InstallCustomInstructionHandlerFromFile "00ss0fdbbbbbaaaaa000ddddd0001011" @vexriscv-aes.py
#sysbus.cpu InstallCustomInstructionHandlerFromString "ssss010bbbbbaaaaa000ddddd0001011" "cpu.DebugLog('aes_enc_round_last')"
#sysbus.cpu InstallCustomInstructionHandlerFromString "ssss001bbbbbaaaaa000ddddd0001011" "cpu.DebugLog('aes_dec_round')"
#sysbus.cpu InstallCustomInstructionHandlerFromString "ssss011bbbbbaaaaa000ddddd0001011" "cpu.DebugLog('aes_dec_round_last')"

showAnalyzer uart
